def MAJOR_VERSION = 1
def MINOR_VERSION = 0
def REVISION_VERSION = 0

def VERSION_CODE = MAJOR_VERSION * 100 + MINOR_VERSION * 10 + REVISION_VERSION
def VERSION_NAME = MAJOR_VERSION + '.' + MINOR_VERSION
def ARTIFACT_VERSION = MAJOR_VERSION + '.' + MINOR_VERSION + '.' + REVISION_VERSION

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 23
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:23.1.1'
}

group = 'com.walfud'
version = ARTIFACT_VERSION
project.archivesBaseName = 'walle'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.compile
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/8/docs/api"
        title 'WallE'
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name 'walle'
            url 'http://walfud.github.io/WallE'

            packaging 'aar'
            groupId 'com.walfud'
            artifactId 'walle'
            version ARTIFACT_VERSION
        }
    }
}

bintray {
    user = 'walfud'
    key = BINTRAY_KEY

    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        repo = 'maven'
        name = 'walle'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/walfud/WallE.git'
        websiteUrl = 'http://walfud.github.io/WallE'
        version {
            name = ARTIFACT_VERSION
        }
    }
}